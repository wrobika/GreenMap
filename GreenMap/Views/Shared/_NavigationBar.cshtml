@{
    @using Microsoft.AspNetCore.Hosting;
    @using Microsoft.Extensions.Configuration
    @inject IWebHostEnvironment environment;
    @inject IConfiguration configuration

    var layerProperties = LayersProperties.Layers;
    var epionierDbContext = new epionierContext(configuration);
    var dzielniceController = new GreenMap.Controllers.DzielniceController(epionierDbContext);
    var odwiertController = new GreenMap.Controllers.OdwiertController(epionierDbContext, environment);
    SelectList districtList = await dzielniceController.GetSelectList();
    SelectList statusList = await odwiertController.GetStatusSelectList();
    SelectList filteringClassList = await odwiertController.GetFilterClassSelectList();
    var partialViewData = new ViewDataDictionary(this.ViewData) {
        { "districtList", districtList },
        { "statusList", statusList },
        { "filteringClassList", filteringClassList}
    };
}

<div id="mouse-position" style="display:none;"></div>
<div id="map" class="map">
    <nav class="navbar navbar-light bg-white">
        <form class="form-inline ml-auto">
            <button style="display:none;" id="infoDrilling" type="button" class="btn btn-success m-1" data-toggle="modal" data-target="#infoDrillingModal"></button>
            <button style="display:none;" id="infoSoilPollution" type="button" class="btn btn-success m-1" data-toggle="modal" data-target="#infoSoilPollutionModal"></button>
            <button style="display:none;" id="infoChemistry" type="button" class="btn btn-success m-1" data-toggle="modal" data-target="#infoChemistryModal"></button>

            <button type="button" class="btn btn-success m-1" data-toggle="modal" data-target="#searchModal">
                Wyszukaj
            </button>
            <div class="dropdown">
                <button class="btn btn-success dropdown-toggle m-1" type="button" id="legendDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Legendy
                </button>
                <div class="dropdown-menu" aria-labelledby="legendDropdown">
                    <button id="soilLegend" type="button" class="dropdown-item" data-toggle="modal" data-target="#soilLegendModal">gleby</button>
                </div>
            </div>
            <div class="dropdown">
                <button class="btn btn-success dropdown-toggle m-1" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Widoczność warstw
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                    @foreach (var name in layerProperties.Keys)
                    {
                        <button id="button_@name" value="@name" type="button" class="dropdown-item">
                            <span><img id="eye_@name" style="width:20px;opacity:1" /></span>
                            @layerProperties[name].FullName
                        </button>
                    }
                </div>
            </div>
        </form>
        @{
            await Html.RenderPartialAsync("_SearchModal", new OdwiertSearch(), partialViewData);
            await Html.RenderPartialAsync("_InfoDrillingModal", new OdwiertInfo());
            await Html.RenderPartialAsync("_InfoSoilPollutionModal", new ZanieczyszczenieGleb());
            await Html.RenderPartialAsync("_InfoChemistryModal", new SkladChemicznyWodPodziemnych());
            await Html.RenderPartialAsync("_SoilLegendModal");
        }
    </nav>
</div>
<div id="popup" class="ol-popup"></div>